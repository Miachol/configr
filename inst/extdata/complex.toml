# Configuration file of install.softwares(Non-Github)
title = "Non-Github Configuration File"
[demo]
source_url = "https://raw.githubusercontent.com/Miachol/ftp/master/files/{{version}}_MT_ensGene.txt"
decompress = false
url_all_download = false
version_newest = "GRCh37"
version_available = ["GRCh37"]
make_dir = ["./"]
bin_dir = ["./"]

[demo_2]
source_url = "https://raw.githubusercontent.com/Miachol/ftp/master/files/{{version}}_MT_ensGene.txt.gz"
url_all_download = false
version_newest = "GRCh37"
version_available = ["GRCh37"]
make_dir = ["./"]
bin_dir = ["./"]

[gmap]
source_url = "http://research-pub.gene.com/gmap/src/{{version}}.tar.gz"
version_newest = "gmap-gsnap-2017-05-08"
version_available = ["gmap-gsnap-2017-05-08", "gmap-gsnap-2017-04-21", "gmap-gsnap-2017-03-17", "gmap-gsnap-2017-02-15", "gmap-gsnap-2016-11-07", "gmap-gsnap-2016-09-14", "gmap-gsnap-2016-06-30.v5", "gmap-gsnap-2015-12-31.v10", "gmap-gsnap-2015-07-23", "gmap-gsnap-2014-12-31.v2", "gmap-gsnap-2014-10-22", "gmap-gsnap-2014-08-20", "gmap-gsnap-2014-06-10", "gmap-gsnap-2014-05-15.v3", "gmap-gsnap-2014-03-28.v2", "gmap-gsnap-2013-10-28", "gmap-gsnap-2013-09-30.v2", "gmap-gsnap-2013-03-31.v5", "gmap-gsnap-2012-07-20.v3", "gmap-gsnap-2012-04-27", "gmap-gsnap-2012-01-11", "gmap-gsnap-2011-12-28", "gmap-gsnap-2011-11-30", "gmap-gsnap-2011-10-16", "gmap-gsnap-2011-09-14", "gmap-gsnap-2011-03-28", "gmap-gsnap-2010-07-27", "gmap-gsnap-2010-03-09", "gmap-2007-09-28", "gmap-2007-06-04", "gmap-2006-12-18", "gmap-2006-04-21", "gmap-2005-10-25", "gmap-2005-07-15", "gmap-2005-06-23", "gmap-2005-05-20", "gmap-2005-05-06", "gmap-2005-03-11"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[gmap.install]
linux = ["./configure --prefix={{destdir}} && make", "make install"]
mac = ["sed -i s/\"## CFLAGS='-O3 -m64' .*\"/\"CFLAGS='-O3 -m64'\"/ config.site && ./configure --prefix={{destdir}} && make", "make install"]

[annovar]
source_url = "http://www.openbioinformatics.org/annovar/download/0wgxR2rIVP/annovar.{{version}}.tar.gz"
version_newest = "latest"
version_available = ["latest"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[gatk_bundle]
source_url = "ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/{{version}}/"
source_is_dir = true
version_newest = "hg38"
version_available = ["hg38", "hg19", "hg18", "b37", "b36"]
make_dir = ["./"]

[hisat2_reffa]
source_url = "ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/{{version}}.tar.gz"
version_newest = "grch38"
version_available = ["bdgp6", "bdgp6_tran", "ce10", "dm6", "grch37", "grch37_snp", "grch37_snp_tran", "grch37_snp_tran_ercc", "grch37_tran", "grch38", "grch38_snp", "grch38_snp_tran", "grch38_snp_tran_ercc", "grch38_tran", "grcm38", "grcm38_snp", "grcm38_snp_tran", "grcm38_snp_tran_ercc", "grcm38_tran", "hg19", "hg38", "hg38_snp_tran_oudejans", "hg38_tran", "mm10", "r64", "r64_tran", "rn6", "rn6_ercc", "rnor6", "sc3", "wbcel235", "wbcel235_tran", "zm3_snp_tran_ercc"]
make_dir = ["./"]

[ucsc_reffa]
source_url = ["http://hgdownload.cse.ucsc.edu/goldenPath/{{version}}/bigZips/{{version}}.chromFa.tar.gz",
"http://hgdownload.cse.ucsc.edu/goldenPath/{{version}}/bigZips/chromFa.tar.gz"]
url_all_download = false
version_newest = "hg38"
version_available = ["hg19", "hg38", "mm9", "mm10"]
make_dir = ["./"]

[ensemble_grch37_reffa]
source_url = "ftp://ftp.ensembl.org/pub/release-{{version}}/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.{{version}}.dna.primary_assembly.fa.gz"
version_newest = "75"
version_available = ["75"]
make_dir = ["./"]

[ensemble_grch38_reffa]
source_url = "ftp://ftp.ensembl.org/pub/release-{{version}}/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"
version_newest = "90"
version_available = ["76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90"]
make_dir = ["./"]

[edena]
source_url = ["http://www.genomic.ch/edena/{{version}}.tar.gz", "http://www.genomic.ch/edena/{{version}}.zip"]
url_all_download = false
version_newest = "EdenaV3.131028"
version_available = ["EdenaV3.131028", "EdenaV3.130110", "EdenaV3.121122", "Edena3dev120926_linux64", "Edena3Dev120626_linux64", "Edena3Dev120626_linux32", "Edena3Dev120615_linux64", "Edena3Dev120615_linux32", "Edena3Dev110920_linux64", "Edena3Dev110920_linux32", "Edena3Dev110815_linux64", "Edena3Dev110815_linux32", "Edena3Dev110814_linux64", "Edena3Dev110814_linux32", "Edena3Dev110705_linux64", "Edena3Dev110705_linux32", "edena2.1.1_linux32", "edena2.1.1_linux64", "edena2.1.1_windows"]
version_order_fixed = true
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[edena.install]
linux = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]
mac = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]

[ucsc_utils]
source_url = "http://hgdownload.cse.ucsc.edu/admin/exe/userApps.{{version}}.src.tgz"
version_newest = "v344"
version_available = ["v305", "v306", "v307", "v308", "v309", "v310", "v311", "v312", "v313", "v314", "v315", "v316", "v317", "v318", "v319", "v320", "v321", "v322", "v323", "v324", "v325", "v326", "v327", "v328", "v329", "v330", "v331", "v332", "v333", "v334", "v335", "v336", "v337", "v338", "v339", "v340", "v341", "v342", "v343", "v344"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[ucsc_utils.install]
linux = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]
mac = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]

[fastqc]
source_url = ["http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v{{version}}.zip"]
version_newest = "0.11.5"
version_available = ["0.11.5", "0.11.4", "0.11.3", "0.11.2", "0.11.1", "0.10.1", "0.10.0", "0.9.6", "0.9.5", "0.9.4", "0.9.3", "0.9.2", "0.9.1", "0.9.0", "0.8.0", "0.7.2", "0.7.1", "0.7.0", "0.6.1", "0.6.0", "0.5.1", "0.5.0", "0.4.3", "0.4.2", "0.4.1", "0.4", "0.3.1", "0.3", "0.2", "0.1.1", "0.1"]
version_order_fixed = true
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[sqlite]
source_url = ["http://www.sqlite.org/2017/sqlite-autoconf-{{version}}.tar.gz",
              "http://www.sqlite.org/2016/sqlite-autoconf-{{version}}.tar.gz",
              "http://www.sqlite.org/2015/sqlite-autoconf-{{version}}.tar.gz",
              "http://www.sqlite.org/2014/sqlite-autoconf-{{version}}.tar.gz",
              "http://www.sqlite.org/2013/sqlite-autoconf-{{version}}.tar.gz"]
url_all_download = false
version_newest = "3180000"
version_available = ["3180000", "3170000", "3130000"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[sqlite.before_install]
linux = "autoreconf -ivf"
mac = "autoreconf -ivf"

[sqlite.install]
linux = ["./configure --prefix={{destdir}} && make", "make install"]
mac = ["./configure --prefix={{destdir}} && make ", "make install"]

[cesa]
source_url = ["http://liulab.dfci.harvard.edu/CEAS/src/CEAS-Package-{{version}}.tar.gz"]
version_newest = "1.0.2"
version_available = ["1.0.2"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}/bin"]

[cesa.install]
linux = "python setup.py install"
mac = "python setup.py install"

[novoalign]
source_url = ["https://github.com/Miachol/novocraft_releases/raw/master/novocraft{{version}}.tar.gz"]
version_newest = "V3.07.01.Linux3.0"
version_available = ["V3.07.01.Linux3.0", "V3.07.01.Linux2.6", "V3.07.01.MacOSX", "V3.07.00.Linux3.0", "V3.07.00.Linux2.6", "V3.07.00.MacOSX", "V3.06.05.Linux3.0", "V3.06.05.Linux2.6", "V3.06.05.MacOSX", "V3.06.04.Linux3.0", "V3.06.04.Linux2.6", "V3.06.04.MacOSX", "V3.06.03.Linux3.0", "V3.06.03.Linux2.6", "V3.06.03.MacOSX", "V3.06.02.Linux3.0", "V3.06.02.Linux2.6", "V3.06.02.MacOSX", "V3.06.01.Linux3.0", "V3.06.01.Linux2.6", "V3.06.01.MacOSX", "V3.06.00.Linux3.0", "V3.06.00.Linux2.6", "V3.06.00.MacOSX", "V3.05.01.Linux3.0", "V3.05.01.Linux2.6", "V3.05.01.MacOSX", "V3.04.06.Linux3.0", "V3.04.06.Linux2.6", "V3.04.06.MacOSX", "V3.04.04.Linux3.0", "V3.04.04.Linux2.6", "V3.04.04.MacOSX", "V3.04.02.Linux3.0", "V3.04.02.Linux2.6", "V3.04.02.MacOSX", "V3.04.01.Linux3.0", "V3.04.01.Linux2.6", "V3.04.01.MacOSX", "V3.03.02.Linux3.0", "V3.03.02.Linux2.6", "V3.03.02.MacOSX", "V3.03.01.Linux3.0", "V3.03.01.Linux2.6", "V3.03.01.MacOSX", "V3.03.00.Linux3.0", "V3.03.00.Linux2.6", "V3.03.00.MacOSX", "V3.02.13.Linux3.0", "V3.02.13.Linux2.6", "V3.02.13.MacOSX", "V3.02.13.Linux3.0", "V3.02.13.Linux2.6", "V3.02.13.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.12.Linux3.0", "V3.02.12.Linux2.6", "V3.02.12.MacOSX", "V3.02.11.Linux3.0", "V3.02.11.Linux2.6", "V3.02.11.MacOSX", "V3.02.10.Linux3.0", "V3.02.10.Linux2.6", "V3.02.10.MacOSX", "V3.02.09.Linux3.0", "V3.02.09.Linux2.6", "V3.02.09.MacOSX", "V3.02.08.Linux3.0", "V3.02.08.Linux2.6", "V3.02.08.MacOSX", "V3.02.07.Linux3.0", "V3.02.07.Linux2.6", "V3.02.07.MacOSX", "V3.02.06.Linux3.0", "V3.02.06.Linux2.6", "V3.02.06.MacOSX"]
version_order_fixed = true
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[novoalign.install]
linux = "mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"

[ssaha2]
source_url = ["ftp://ftp.sanger.ac.uk/pub/resources/software/ssaha2/ssaha2_{{version}}.tgz"]
version_newest = "v2.5.5_x86_64"
version_available = ["v2.5.1_mac", "v2.5.2_i686", "v2.5.2_ia64", "v2.5.2_x86_64", "v2.5.3_i686", "v2.5.3_ia64", "v2.5.3_x86_64", "v2.5.4_i686", "v2.5.4_MacOSX_i386", "v2.5.4_x86_64", "v2.5.5_i686", "v2.5.5_x86_64"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[ssaha2.install]
linux = "mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"

[gatk]
source_url = ["https://github.com/Miachol/gatk_releases/raw/master/gatk{{version}}.tar.gz"]
version_newest = "3.8-0"
version_available = ["3.8-0", "3.7-0", "3.7", "3.6", "3.5", "3.4-46"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[gatk.install]
linux = "mkdir -p {{destdir}}/bin; cp *.jar {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; cp *.jar {{destdir}}/bin"

[gatk4]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/gatk/gatk-{{version}}.zip"
version_available = "4.0.0.0"
linux = "mkdir -p {{destdir}}/bin; cp gatk *.jar {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; cp gatk *.jar {{destdir}}/bin"

[mutect]
source_url = ["https://github.com/Miachol/gatk_releases/raw/master/mutect{{version}}.zip"]
version_newest = "1.1.7"
version_available = ["1.1.7", "1.1.4", "1.1.1"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[mutect.install]
linux = "mkdir -p {{destdir}}/bin; cp *.jar {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; cp *.jar {{destdir}}/bin"

[sratools]
version_newest = "2.8.2-1"
version_available = ["2.4.2-1", "2.4.2-3", "2.4.3", "2.4.4", "2.4.5", "2.4.5-5", "2.4.5-6", "2.5.0", "2.5.1", "2.5.2", "2.5.3", "2.5.4", "2.5.5", "2.5.6", "2.5.7", "2.5.8", "2.5.8-1", "2.6.2", "2.6.3", "2.7.0", "2.8.0", "2.8.0-1", "2.8.0-2", "2.8.1", "2.8.1-2", "2.8.1-3", "2.8.2", "2.8.2-1"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}/bin"]

[sratools.source_url]
linux = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.@>@if('{{os.version}}' == 'centos') {'{{version}}-centos_linux64'} else if ('{{os.version}}' == 'ubuntu') {'{{version}}-ubuntu64'}@<@.tar.gz"
mac = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.{{version}}-mac64.tar.gz"
windows = "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/{{version}}/sratoolkit.{{version}}-win64.zip"

[sratools.install]
linux = ["mkdir -p {{destdir}}/bin; fn=`ls -F bin|grep '*' | tr -d '*'` ;cd bin;", " cp $fn {{destdir}}/bin"]
mac = ["mkdir -p {{destdir}}/bin; fn=`ls -F bin|grep '*' | tr -d '*'` ;cd bin;", " cp $fn {{destdir}}/bin"]

[fusioncatcher]
source_url = ["https://sourceforge.net/projects/fusioncatcher/files/fusioncatcher_{{version}}.zip",
              "https://sourceforge.net/projects/fusioncatcher/files/bootstrap.py"]
decompress = [true, false]
#dependence = ["bwa", "blat", "faToTwoBit", "bowtie", "bowtie2", "star", "sratools", "velvet", "lzo", "pigz", "seqtk", "picard", "samtools_old", "pxz", "liftover"]
#dependence_version = ["v0.7.15", "latest", "latest", "v1.2.0", "v2.3.0", "2.5.3a", "2.8.2-1", "1.2.10", "2.10", "2.2.4", "1.2-r101b", "2.9.0", "0.1.19", "master", "latest"]
version_newest = "v0.99.7b"
version_available = ["v0.99.7b", "v0.99.7a", "v0.99.6a", "v0.99.5a", "v0.99.4e", "v0.99.4d", "v0.99.4c", "v0.99.4b", "v0.99.4a", "v0.99.3e", "v0.99.3d", "v0.99.3c", "v0.99.3b", "v0.99.3a", "v0.99.2", "v0.99.1", "v0.99.0", "v0.95", "v0.96", "v0.93", "v0.94", "v0.98", "v0.97"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin/fusioncatcher"]

[fusioncatcher.install]
linux = ["mkdir {{destdir}}/bin/fusioncatcher; chmod +x bin/*; ", "cp bin/* {{destdir}}/bin/fusioncatcher"]
mac = ["mkdir {{destdir}}/bin/fusioncatcher; chmod +x bin/*; ", "cp bin/* {{destdir}}/bin/fusioncatcher"]

[pigz]
source_url = "http://cdn-fastly.deb.debian.org/debian/pool/main/p/pigz/pigz_{{version}}.orig.tar.gz"
version_newest = "2.3.4"
version_available = ["2.2.4", "2.3.1", "2.3.4"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[pigz.install]
linux = "make; mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"
mac = "make; mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'`;cp $fn {{destdir}}/bin"

[velvet]
source_url = "http://www.ebi.ac.uk/~zerbino/velvet/velvet_{{version}}.tgz"
version_newest = "1.2.10"
version_available = ["1.2.10", "0.7.01", "0.6.01", "0.5.01", "0.4", "0.3"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[velvet.install]
linux = "make && mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'` ;cp $fn {{destdir}}/bin"
mac = "make && mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'` ;cp $fn {{destdir}}/bin"

[lzo]
source_url = "http://www.oberhumer.com/opensource/lzo/download/lzo-{{version}}.tar.gz"
version_newest = "2.10"
version_available = ["2.00", "2.01", "2.02", "2.03", "2.04", "2.05", "2.06", "2.07", "2.08", "2.09", "2.10"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/lib"]

[lzo.install]
linux = ["./configure --prefix={{destdir}} --enable-shared && make", " make install"]
mac = ["./configure --prefix={{destdir}} --enable-shared && make", " make install"]

[lzop]
source_url = "http://www.lzop.org/download/lzop-{{version}}.tar.gz"
dependence = ["lzo"]
dependence_version = ["2.10"]
version_newest = "1.03"
version_available = ["1.03", "1.02-rc1", "1.01"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/lib"]

[lzop.install]
linux = ["export CPPFLAGS='-I{{lzo:install.dir}}/include';export LDFLAGS='-L{{lzo:install.dir}}/lib'; ./configure --prefix={{destdir}}&& make", "make install"]
mac = ["export CPPFLAGS='-I{{lzo:install.dir}}/include';export LDFLAGS='-L{{lzo:install.dir}}/lib'; ./configure --prefix={{destdir}}&& make", "make install"]

[fusioncatcher_reffa]
source_url = ["https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.aa",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ab",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ac",
              "https://sourceforge.net/projects/fusioncatcher/files/data/ensembl_v{{version}}.tar.gz.ad"]
decompress = false
version_newest = "86"
version_available = ["86"]
make_dir = ["./"]

[snpeff]
source_url = ["https://sourceforge.net/projects/snpeff/files/snpEff_{{version}}_core.zip"]
version_newest = "v4_30"
version_available = ["v4.3o", "v4.3m", "v4_3l", "v4_3k", "v4_3i", "v4_3g", "v4_3f", "v4_3e", "v4_3c", "v4_3b", "v4_3a", "v4_3", "v4_2", "v4_1l", "v4_1k", "v4_1j", "v4_1i", "v4_1h", "v4_1g", "v4_1f", "v4_1e", "v4_1d", "v4_1c", "v4_1b", "v4_1", "v4_0", "v3_6", "v3_5", "v3_4", "v3_3", "v3_2", "v3_1", "v3_0", "v3_0a"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[tvc]
source_url = ["http://updates.iontorrent.com/tvc_standalone/tvc-{{version}}.tar.gz"]
decompress = false
version_newest = "5.2.2"
version_available = ["5.2.2", "5.2.1", "5.0.3"]
make_dir = ["./"]
bin_dir = ["./bin"]

[tvc.install]
linux = ["#R#fn.sh <- system.file('extdata', 'scripts/install_tvc.sh', package = 'BioInstaller'); system(sprintf('sh %s {{destdir}} {{version}}', fn.sh));#R#", 'mkdir {{destdir}}/bin; cp bin/* {{destdir}}/bin']
mac = ["#R#fn.sh <- system.file('extdata', 'scripts/install_tvc.sh', package = 'BioInstaller'); system(sprintf('sh %s {{destdir}} {{version}}', fn.sh));#R#", 'mkdir {{destdir}}/bin; cp bin/* {{destdir}}/bin']

[imagej]
version_newest = "150"
version_available = ["150"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[imagej.source_url]
linux = "http://wsr.imagej.net/distros/linux/ij{{version}}-linux64-java8.zip"
mac = "http://wsr.imagej.net/distros/osx/ij{{version}}-osx-java8.zip"
windows = "http://wsr.imagej.net/distros/win/is{{version}}-win-java8.zip"

[zlib]
version_newest = "1.2.11"
version_available = ["1.2.11", "1.2.10", "1.2.9", "1.2.7", "1.2.8", "1.2.6", "1.2.5", "1.2.4", "1.2.3", "1.2.1", "1.1.4", "1.1.3"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/lib"]

[zlib.source_url]
linux = ["https://sourceforge.net/projects/libpng/files/zlib/{{version}}/zlib-{{version}}.tar.gz"]
mac = ["https://sourceforge.net/projects/libpng/files/zlib/{{version}}/zlib-{{version}}.tar.gz"]

[zlib.install]
linux = ["./configure --prefix={{destdir}} && make", "make install"]
mac = ["./configure --prefix={{destdir}} && make", "make install"]

[bzip2]
source_url = "http://www.bzip.org/{{version}}/bzip2-{{version}}.tar.gz"
version_newest = "1.0.6"
version_available = ["1.0.6"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[bzip2.install]
linux = ["sed -i 's;CC=gcc;CC=gcc -fPIC;' Makefile; make -f Makefile-libbz2_so && make clean && make","make install PREFIX={{destdir}}"]
mac = ["sed -i 's;CC=gcc;CC=gcc -fPIC;' Makefile; make -f Makefile-libbz2_so && make clean && make", "make install PREFIX={{destdir}}"]

[armadillo]
source_url = ["@>@ if('{{version}}' != '4.600.1') {'https://sourceforge.net/projects/arma/files/armadillo-{{version}}.tar.xz'} else {'http://updates.iontorrent.com/updates/software/external/armadillo-{{version}}.tar.gz'}@<@"]
version_newest = "7.900.1"
version_available = ["7.900.1", "7.800.2", "7.800.1", "4.600.1"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/lib"]

[armadillo.install]
linux = ["@>@if('{{version}}' != '4.600.1'){' cmake .; make; make install DESTDIR={{destdir}}'} else {%'%sed -i 's:^// #define ARMA_USE_LAPACK$:#define ARMA_USE_LAPACK:g' include/armadillo_bits/config.hpp; sed -i 's:^// #define ARMA_USE_BLAS$:#define ARMA_USE_BLAS:g' include/armadillo_bits/config.hpp && cmake . && make -j4; make install DESTDIR={{destdir}}%'%}@<@"]
mac = ["@>@if('{{version}}' != '4.600.1'){' cmake .; make; make install DESTDIR={{destdir}}'} else {%'%sed -i 's:^// #define ARMA_USE_LAPACK$:#define ARMA_USE_LAPACK:g' include/armadillo_bits/config.hpp; sed -i 's:^// #define ARMA_USE_BLAS$:#define ARMA_USE_BLAS:g' include/armadillo_bits/config.hpp && cmake . && make -j4; make install DESTDIR={{destdir}}%'%}@<@"]

[samstat]
source_url = "https://sourceforge.net/projects/samstat/files/samstat-{{version}}.tar.gz"
version_newest = "1.5.1"
version_available = ["1.5.1", "1.5"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[samstat.before_install]
linux = "autoreconf -ivf"
mac = "autoreconf -ivf"

[samstat.install]
linux = ["./configure --prefix={{destdir}} && make", "make install"]
mac = ["./configure --prefix={{destdir}} && make", "make install"]

[prinseq]
source_url = "https://sourceforge.net/projects/prinseq/files/standalone/prinseq-lite-{{version}}.tar.gz"
version_newest = "0.20.4"
version_available = ["0.20.4", "0.20.3", "0.20.2", "0.20.1", "0.20", "0.19.5", "0.19.4", "0.19.3", "0.19.2", "0.19.1", "0.19", "0.18.3", "0.18.2", "0.18.1", "0.18", "0.17.4", "0.17.3", "0.17.2", "0.17.1", "0.17", "0.16", "0.15.1", "0.15", "0.14.4", "0.14.2", "0.14.1", "0.14", "0.13.2", "0.13.1", "0.13", "0.12", "0.11", "0.10", "0.9", "0.8"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[prinseq.install]
linux = "chmod +x *.pl && mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'` ;cp $fn {{destdir}}/bin"
mac = "chmod +x *.pl && mkdir -p {{destdir}}/bin; fn=`ls -F |grep '*' | tr -d '*'` ;cp $fn {{destdir}}/bin"

[solexaqa]
source_url = ["https://sourceforge.net/projects/solexaqa/files/src/SolexaQA++_v{{version}}.zip",
              "https://sourceforge.net/projects/solexaqa/files/src/SolexaQA_v.{{version}}.zip"]
url_all_download = false
version_newest = "3.1.7.1"
version_available = ["3.1.7.1", "3.1.7", "3.1.6", "3.1.5", "3.1.4", "3.1.3", "3.1.2", "3.1.1", "3.1", "3.0", "2.5", "2.4", "2.3", "2.2", "2.1", "2.0", "1.13"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[solexaqa.install]
linux = "chmod -R +x {{download.dir}}/Linux_x64/*; mkdir -p {{destdir}}/bin; cp {{download.dir}}/Linux_x64/* {{destdir}}/bin"
mac = "chmod -R +x {{download.dir}}/MacOs_10.7+/*; mkdir -p {{destdir}}/bin; cp {{download.dir}}/MacOs_10.7+/* {{destdir}}/bin"

[mapsplice2]
source_url = "http://protocols.netlab.uky.edu/~zeng/MapSplice-v{{version}}.zip"
version_newest = "2.2.1"
version_available = ["2.2.1", "2.2.0", "2.1.9", "2.1.8", "2.1.7", "2.1.6", "2.1.5", "2.1.4", "2.1.3", "2.1.2", "2.1.0"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[mapsplice2.install]
linux = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]
mac = ["make", "mkdir -p {{destdir}}/bin; cp {{download.dir}}/bin/* {{destdir}}/bin"]

[bcl2fastq]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/bcl2fastq/bcl2fastq2-v{{version}}.tar.gz"
version_newest = "2.20.0"
version_available = ["2.20.0", "2.19.1"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[bcl2fastq.install]
linux = ["mkdir build; cd build; ../src/configure --prefix={{destdir}} && make", "cd build && make install"]
mac = ["mkdir build; cd build; ../src/configure --prefix={{destdir}} && make", "cd build && make install"]

[blat]
decompress = false
version_newest = "latest"
version_available = ["latest"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[blat.source_url]
linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/blat/blat"

[blat.install]
linux = "chmod +x blat; mkdir -p {{destidr}}/bin; cp blat {{destdir}}/bin"
mac = "chmod +x blat; mkdir -p {{destidr}}/bin; cp blat {{destdir}}/bin"

[fatotwobit]
decompress = false
version_newest = "latest"
version_available = ["latest"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[fatotwobit.source_url]
linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/faToTwoBit"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/faToTwoBit"

[fatotwobit.install]
linux = "chmod +x faToTwoBit; mkdir -p {{destidr}}/bin; cp faToTwoBit {{destdir}}/bin"
mac = "chmod +x faToTwoBit; mkdir -p {{destidr}}/bin; cp faToTwoBit {{destdir}}/bin"

[liftover]
decompress = false
version_newest = "latest"
version_available = ["latest"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[liftover.source_url]
linux = "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/liftOver"
mac = "http://hgdownload.soe.ucsc.edu/admin/exe/macOSX.x86_64/liftOver"

[liftover.install]
linux = "chmod +x liftOver; mkdir -p {{destdir}}/bin; cp liftOver {{destdir}}/bin"
mac = "chmod +x liftOver; mkdir -p {{destidr}}/bin; cp liftOver {{destdir}}/bin"

[svtoolkit]
source_url = "http://bioinfo.rjh.com.cn/download/svtoolkit/svtoolkit_{{version}}.tar.gz"
version_newest = "2.00.1747"
version_available = ["2.00.1678", "2.00.1685", "2.00.1696", "2.00.1710", "2.00.1736", "2.00.1747"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}/lib"]

[svtoolkit.install]
linux = ""
mac = ""

[root]
source_url = "https://root.cern.ch/download/root_v{{version}}.source.tar.gz"
version_newest = "6.09.02"
version_available = ["6.09.02", "6.08.06", "6.08.04", "6.08.02", "6.08.00", "6.06.08", "6.06.06", "6.06.04", "6.06.02", "6.06.00", "6.05.02", "6.04.18", "6.04.16", "6.04.14", "6.04.12", "6.04.10", "6.04.08", "6.04.06", "6.04.04", "6.04.02", "6.04.00", "6.03.04", "6.03.02", "6.02.12", "6.02.10", "6.02.08", "6.02.05", "6.02.04", "6.02.03", "6.02.02", "6.02.01", "6.02.00", "6.00.02", "6.00.01", "6.00.00", "5.99.06", "5.99.05", "5.99.04", "5.34.36", "5.34.34", "5.34.32", "5.34.30", "5.34.28", "5.34.26", "5.34.25", "5.34.24", "5.34.23", "5.34.22", "5.34.21", "5.34.20", "5.34.19", "5.34.18", "5.34.17", "5.34.14", "5.34.13", "5.34.12", "5.34.11", "5.34.10", "5.34.09", "5.34.08", "5.34.07", "5.34.06", "5.34.05", "5.34.04", "5.34.03", "5.34.02", "5.34.01", "5.34.00", "5.33.02", "5.32.04", "5.32.03", "5.32.02", "5.32.01", "5.32.00", "5.30.06", "5.30.05", "5.30.04", "5.30.03", "5.30.02", "5.30.01", "5.30.00", "5.29.02", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.28.00", "5.27.06", "5.27.04", "5.27.02", "5.26.00", "5.26.00", "5.26.00", "5.25.02", "5.24.00", "5.24.00", "5.23.04", "5.23.02", "5.22.00", "5.22.00", "5.22.00", "5.22.00", "5.22.00", "5.22.00", "5.22.00", "5.22.00", "5.22.00"]
after_success = "echo 'source {{download.dir}}/build/bin/thisroot.sh'>>$HOME/.bashrc"
make_dir = ["./"]
bin_dir = ["{{download.dir}}/build/bin"]

[root.install]
linux = ["mkdir build; cd build && cmake .. && make -j8"]
mac = ["mkdir build; cd build && cmake .. && make -j8"]

[cnvnator_samtools]
source_url = "http://bioinfo.rjh.com.cn/download/svtoolkit/cnvnator_samtools_{{version}}.tar.gz"
version_newest = "1.3.1"
version_available = ["1.3.1"]
make_dir = ["./"]
bin_dir = ["{{download.dir}}"]

[cnvnator_samtools.install]
linux = "make"
mac = "make"

[htslib]
source_url = "https://github.com/samtools/htslib/archive/{{version}}.tar.gz"
use_github_versions = true
after_success = ["ln -s htslib/* ./; echo successful!"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[htslib.install]
linux = ["autoheader; autoconf; ./configure --prefix={{destdir}}; make;", " make install"]
mac = ["autoheader; autoconf; ./configure --prefix={{destdir}}; make;", " make install"]

[samtools]
source_url = "https://github.com/samtools/samtools/archive/{{version}}.tar.gz"
use_github_versions = true
dependence = ["htslib"]
dependence_version = ["{{version}}"]
after_success = ["ln -s {{htslib:source.dir}} ./", "ln -s {{htslib:source.dir}} htslib", "ls htslib > /dev/null"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[samtools.install]
linux = ["autoconf -Wno-syntax;","sed -i 's;HTSDIR = ../htslib;HTSDIR = {{htslib:source.dir}};' config.mk; ", "./configure --with-htslib={{htslib:source.dir}} --prefix={{destdir}}; make ", "make install prefix={{destdir}}"]
mac = ["autoconf -Wno-syntax;","sed -i 's;HTSDIR = ../htslib;HTSDIR = {{htslib:source.dir}};' config.mk; ", "./configure --with-htslib={{htslib:source.dir}} --prefix={{destdir}}; make ", "make install prefix={{destdir}}"]

[pcre]
source_url = "https://ftp.pcre.org/pub/pcre/pcre-{{version}}.tar.gz"
version_newest = "8.40"
version_available = ["8.40", "8.39", "8.38", "8.37", "8.36", "8.35", "8.34", "8.33", "8.32", "8.31", "8.30", "8.21", "8.20", "8.13", "8.12", "8.11", "8.10", "8.02", "8.01", "8.00"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[pcre.install]
linux = ["autoreconf -ivf && ./configure --enable-utf8 --prefix={{destdir}} && make -j3", "make install"]
mac = ["./configure --enable-utf8 --prefix={{destdir}} && make -j3", "make install"]

[xz]
source_url = "http://tukaani.org/xz/xz-{{version}}.tar.gz"
decompress = false
version_newest = "5.2.3"
version_available = ["5.2.3", "5.2.2"]
after_success = "mv xz-{{version}}/* ./ ; rm -rf xz-{{version}}"
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[xz.install]
linux = ["tar -xzvf xz-{{version}}.tar.gz && cd xz-{{version}} && ./configure --prefix={{destdir}} && make -j3", "make install"]
mac = ["tar -xzvf xz-{{version}}.tar.gz && cd xz-{{version}} && ./configure --prefix={{destdir}} && make -j3", "make install"]

[curl]
source_url = "https://curl.haxx.se/download/curl-{{version}}.tar.gz"
version_newest = "7.54.0"
version_available = ["7.54.0", "7.53.1", "7.53.0", "7.52.1", "7.52.0", "7.51.0", "7.50.3", "7.50.2", "7.50.1", "7.50.0", "7.49.1", "7.49.0", "7.48.0", "7.47.1", "7.47.0", "7.46.0", "7.45.0", "7.44.0", "7.43.0", "7.42.1", "7.42.0", "7.41.0", "7.40.0", "7.39.0", "7.38.0", "7.37.1", "7.37.0", "7.36.0", "7.35.0", "7.34.0", "7.33.0", "7.32.0", "7.31.0", "7.30.0", "7.29.0", "7.28.1", "7.28.0", "7.27.0", "7.26.0", "7.25.0", "7.24.0", "7.23.1", "7.23.0", "7.22.0", "7.21.7", "7.21.6", "7.21.5", "7.21.4", "7.21.3", "7.21.2", "7.21.1", "7.21.0", "7.20.1", "7.20.0"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]

[curl.install]
linux = ["./configure --prefix={{destdir}} --with-ssl && make -j3", "make install"]
mac = ["./configure --prefix={{destdir}} --with-ssl && make -j3", "make install"]

[r]
version_newest = "3.4.0"
version_available = ["3.4.0", "3.3.3", "3.3.2", "3.3.1", "3.3.0", "3.2.5", "3.2.4-revised", "3.2.4", "3.2.3", "3.2.2", "3.2.1", "3.2.0", "3.1.3", "3.1.2", "3.1.1", "3.1.0", "3.0.3", "3.0.2", "3.0.1", "3.0.0", "2.9.2", "2.9.1", "2.9.0", "2.8.1", "2.8.0", "2.7.2", "2.7.1", "2.7.0", "2.6.2", "2.6.1", "2.6.0", "2.5.1", "2.5.0", "2.4.1", "2.4.0", "2.3.1", "2.3.0", "2.2.1", "2.2.0", "2.15.3", "2.15.2", "2.15.1-w", "2.15.1", "2.15.0", "2.14.2", "2.14.1", "2.14.0", "2.13.2", "2.13.1", "2.13.0", "2.12.2", "2.12.1", "2.12.0", "2.11.1", "2.11.0", "2.1.1", "2.10.1", "2.10.0", "2.1.0", "2.0.1", "2.0.0", "1.9.1", "1.9.0", "1.8.1", "1.8.0", "1.7.1", "1.7.0", "1.6.2", "1.6.1", "1.6.0", "1.5.1-recommended", "1.5.1", "1.5.0-recommended", "1.5.0", "1.4.1-recommended", "1.4.1", "1.4.0-recommended", "1.4.0", "1.3.1-recommended", "1.3.1", "1.3.0-recommended", "1.3.0", "1.2.3", "1.2.2", "1.2.1", "1.2.0", "1.1.1", "1.1.0", "1.0.1", "1.0.0", "0.99.0a", "0.99.0", "0.90.1", "0.90.0", "0.65.1", "0.65.0", "0.64.2", "0.64.1", "0.64.0", "0.63.3", "0.63.2", "0.63.1", "0.63.0", "0.62.4", "0.62.3", "0.62.2", "0.62.1", "0.62.0", "0.61.3", "0.61.2", "0.61.1", "0.61.0", "0.60.1", "0.60.0", "0.50-a4", "0.50-a1", "0.49"]
dependence = ["bzip2", "zlib", "xz", "pcre", "curl"]
dependence_version = ["1.0.6", "1.2.11", "5.2.2", "8.40", "7.54.0"]
make_dir = ["./"]
bin_dir = ["{{destdir}}/bin"]
url_all_download = false

[r.source_url]
linux = ["https://cran.r-project.org/src/base/R-3/R-{{version}}.tar.gz",
              "https://cran.r-project.org/src/base/R-2/R-{{version}}.tar.gz",
              "https://cran.r-project.org/src/base/R-1/R-{{version}}.tgz",
              "https://cran.r-project.org/src/base/R-0/R-{{version}}.tgz"]
mac = ["https://cran.r-project.org/bin/macosx/R-{{version}}.pkg",
       "https://cran.r-project.org/bin/macosx/old/R-{{version}}.pkg"]
windows = ["https://cran.r-project.org/bin/windows/base/R-{{version}}-win.exe",
           "https://cran.r-project.org/bin/windows/base/old/{{versions}}/R-{{version}}-win.exe"]

[r.install]
linux = ["""./configure --enable-R-shlib --prefix={{destdir}} CFLAGS='\
@>@
library(stringr)
include.flag <- unique(c('-I{{zlib:install.dir}}/include', '-I{{bzip2:install.dir}}/include', '-I{{xz:install.dir}}/include', '-I{{pcre:install.dir}}/include', '-I{{curl:install.dir}}/include'))
include.flag <- include.flag[!str_detect(include.flag, ':')]
paste(include.flag, collapse=' ')
@<@' \
LDFLAGS='\
@>@
lib.flag <- unique(c('-I{{zlib:install.dir}}/lib', '-I{{bzip2:install.dir}}/lib', '-I{{xz:install.dir}}/lib', '-I{{pcre:install.dir}}/lib', '-I{{curl:install.dir}}/lib'))
lib.flag <- lib.flag[!str_detect(lib.flag, ':')]
paste(lib.flag, collapse=' ')
@<@' \
&& make""", "make install"]
mac = ["""./configure --enable-R-shlib --prefix={{destdir}} CFLAGS='\
@>@
library(stringr)
include.flag <- unique(c('-I{{zlib:install.dir}}/include', '-I{{bzip2:install.dir}}/include', '-I{{xz:install.dir}}/include', '-I{{pcre:install.dir}}/include', '-I{{curl:install.dir}}/include'))
include.flag <- include.flag[!str_detect(include.flag, ':')]
paste(include.flag, collapse=' ')
@<@' \
LDFLAGS='\
@>@
lib.flag <- unique(c('-I{{zlib:install.dir}}/lib', '-I{{bzip2:install.dir}}/lib', '-I{{xz:install.dir}}/lib', '-I{{pcre:install.dir}}/lib', '-I{{curl:install.dir}}/lib'))
lib.flag <- lib.flag[!str_detect(lib.flag, ':')]
paste(lib.flag, collapse=' ')
@<@' \
&& make""", "make install"]

[reditools]
source_url = "https://nchc.dl.sourceforge.net/project/reditools/REDItools-{{version}}.tar.gz"

[reditools.install]
linux = "pip install ."
mac = "pip install ."

[miniconda2]
decompress = false
url_all_download = false

[miniconda2.source_url]
windows = ["https://repo.continuum.io/miniconda/Miniconda2-{{version}}-Windows-x86_64.exe",
           "http://bioinfo.rjh.com.cn/download/miniconda/Miniconda2-{{version}}-Windows-x86_64.exe"]
mac = ["https://repo.continuum.io/miniconda/Miniconda2-{{version}}-MacOSX-x86_64.sh",
       "http://bioinfo.rjh.com.cn/download/miniconda/Miniconda2-{{version}}-MacOSX-x86_64.sh"]
linux = ["https://repo.continuum.io/miniconda/Miniconda2-{{version}}-Linux-x86_64.sh",
         "http://bioinfo.rjh.com.cn/download/miniconda/Miniconda2-{{version}}-Linux-x86_64.sh"]

[miniconda2.install]
linux = "sh Miniconda2-{{version}}-Linux-x86_64.sh"
mac = "sh Miniconda2-{{version}}-MacOSX-x86_64.sh"

[miniconda3]
decompress = false
url_all_download = false

[miniconda3.source_url]
windows = ["https://repo.continuum.io/miniconda/Miniconda3-{{version}}-Windows-x86_64.exe",
           "http://bioinfo.rjh.com.cn/download/miniconda/Miniconda3-{{version}}-Windows-x86_64.exe"]
mac = ["https://repo.continuum.io/miniconda/Miniconda3-{{version}}-MacOSX-x86_64.sh",
       "http://bioinfo.rjh.com.cn/download/miniconda/Miniconda3-{{version}}-MacOSX-x86_64.sh"]
linux = ["https://repo.continuum.io/miniconda/Miniconda3-{{version}}-Linux-x86_64.sh",
         "https://repo.continuum.io/miniconda/Miniconda3-{{version}}-Linux-x86_64.sh"]

[miniconda3.install]
linux = "sh Miniconda3-{{version}}-Linux-x86_64.sh"
mac = "sh Miniconda3-{{version}}-MacOSX-x86_64.sh"

[strelka]
source_url = "ftp://strelka@ftp.illumina.com/v1-branch/v{{version}}/strelka_workflow-{{version}}.tar.gz"
version_order_fixed = true
version_available = ["1.0.15", "1.0.4", "1.0.5", "1.0.6", "1.0.7", "1.0.10",
                     "1.0.11", "1.0.12", "1.0.13", "1.0.14"]

[strelka.install]
linux = ["./configure --prefix={{destdir}} && make", "make install"]
mac = ["./configure --prefix={{destdir}} && make", "make install"]

[ngs_qc_toolkit]
source_url = "http://14.139.61.3:8080/ngsqctoolkit/NGSQCToolkit_{{version}}.zip"
version_order_fixed = true
version_available = ["v2.3.3", "v2.3.2", "v2.3.1"]

[srnanalyzer]
source_url = "http://srnanalyzer.systemsbiology.net/downloads/sRNAnalyzer.tar.gz"
version_available = "latest"

[blast]
version_available = ["2.7.1", "2.6.0", "2.5.0", "2.4.0", "2.3.0"]
[blast.source_url]
linux = "ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/{{version}}/ncbi-blast-{{version}}+-x64-linux.tar.gz"
mac = ["ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/{{version}}/ncbi-blast-{{version}}+-x64-macosx.tar.gz",
       "ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/{{version}}/ncbi-blast-{{version}}+.dmg"]
win = ["ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/{{version}}/ncbi-blast-{{version}}+-x64-win64.tar.gz",
       "ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/{{version}}/ncbi-blast-{{version}}+-win64.exe"]

[gridss]
source_url = "https://github.com/PapenfussLab/gridss/releases/download/{{version}}/gridss-@>@str_replace('{{version}}', 'v', '')@<@-jar-with-dependencies.jar"
use_github_versions = true
[gridss.install]
linux = "mkdir -p {{destdir}}/bin; cp {{download.dir}}/*.jar {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; cp {{download.dir}}/*.jar {{destdir}}/bin"

[interproscan]
source_url = [
              "ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/{{version}}/interproscan-{{version}}-64-bit.tar.gz",
              "http://bioinfo.rjh.com.cn/download/bioinstaller/interproscan/interproscan-{{version}}-64-bit.tar.gz"
]
url_all_download = false
version_available = "5.27-66.0"
[interproscan.install]
linux = ""
mac = ""

[subread]
source_url = "https://sourceforge.net/projects/subread/files/subread-{{version}}/subread-{{version}}-source.tar.gz"
version_available = "1.6.0"
make_dir = ["./src"]
[subread.install]
linux = "make -f Makefile.Linux"
mac = "make -f Makefile.MacOS"

[vcfanno.source_url]
linux = "https://github.com/brentp/vcfanno/releases/download/{{version}}/vcfanno_linux64"
mac = "https://github.com/brentp/vcfanno/releases/download/{{version}}/vcfanno_osx"
[vcfanno]
use_github_versions = true
[vcfanno.install]
linux = "mkdir -p {{destdir}}/bin; chmod a+x {{download.dir}}/vcfanno_linux64; cp {{download.dir}}/vcfanno_linux64 {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; chmod a+x {{download.dir}}/vcfanno_osx; cp {{download.dir}}/vcfanno_osx {{destdir}}/bin"

[absolute]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/absolute/ABSOLUTE_{{version}}.tar.gz"
version_available = ["1.0.6", "1.0.5"]
[absolute.install]
linux = "#R#devtools::install('./')#R#"
mac = "#R#devtools::install('./')#R#"
windows = "#R#devtools::install('./')#R#"

[hapseg]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/absolute/HAPSEG_{{version}}.tar.gz"
version_available = ["1.1.1"]
[hapseg.install]
linux = "#R#setRepositories(ind=1:2);devtools::install('./')#R#"
mac = "#R#setRepositories(ind=1:2);devtools::install('./')#R#"
windows = "#R#setRepositories(ind=1:2);devtools::install('./')#R#"

[atlas2]
source_url = "https://sourceforge.net/projects/atlas2/files/Atlas2_v{{version}}.zip"
version_available = ["1.4.3", "1.4.1"]

[beagle]
source_url = "http://faculty.washington.edu/browning/beagle/{{version}}"
version_available = ["beagle.08Jun17.d8b.jar", "beagle_4.1_21Jan17.pdf", "run.beagle.08Jun17.d8b.example",
                     "release_notes", "beagle.170608.zip"]

[contest]
source_url = ["http://bioinfo.rjh.com.cn/download/bioinstaller/contest/contest-{{version}}-bin.zip",
              "hg19_population_stratified_af_hapmap_3.3.vcf.gz"]
url_all_download = true
version_available = "1.0.24530"
[contest.install]
linux = "mkdir -p {{destdir}}/bin; cp {{download.dir}}/*.jar {{destdir}}/bin"
mac = "mkdir -p {{destdir}}/bin; cp {{download.dir}}/*.jar {{destdir}}/bin"

[rmats]
source_url = "https://sourceforge.net/projects/rnaseq-mats/files/MATS/rMATS.{{version}}.tgz"
version_available = ["4.0.1", "3.2.5"]

[rmats_reffa]
source_url = "http://rmaps.cecsresearch.org/{{version}}/{{version}}index.tgz"
version_available = "STAR"

[prada]
source_url = "https://sourceforge.net/projects/prada/files/pyPRADA/pyPRADA_{{version}}.tar.gz"
version_available = "1.2"

[igv]
source_url = "http://data.broadinstitute.org/igv/projects/downloads/2.4/IGV_{{version}}.zip"
version_available = "2.4.6"

[marina]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/marina_matlab/marina_matlab-{{version}}.tar.gz"
version_available = "4"

[paradigm]
source_url = "http://paradigm.five3genomics.com/five3_paradigm_webapi.py"
version_available = "latest"

[meerkat]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/meerkat/meerkat.{{version}}.tar.gz"
version_available = "0.189"

[vadir]
source_url = ["http://bioinfo.rjh.com.cn/download/bioinstaller/vadir/VaDiR.tar.gz",
              "ftp://penguin.genomics.cn/pub/10.5524/100001_101000/100360/VaDiR.tar.gz"]
version_available = "latest"

[mutsig]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/mutsig/MutSigCV_{{version}}.zip"
version_available = ["1.41"]

[mutsig_dependence]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/mutsig/{{version}}.zip"
version_available = ["exome_full192.coverage", "mutation_type_dictionary_file.txt"]

[mutsig_reffa]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/mutsig/{{version}}.zip"
version_available = ["hg19.fa"]

[jaffa_reffa]
source_url = "http://bioinfo.rjh.com.cn/download/bioinstaller/jaffa/JAFFA_REFERENCE_FILES_{{version}}.tar.gz"
version_available = ["HG19_GENCODE19", "HG38_GENCODE22"]
